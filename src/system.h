#ifndef _ALTERA_HPS_H_
#define _ALTERA_HPS_H_

void FPGA_CLOSE();
void IOWR_32DIRECT(uint32_t base, uint32_t reg_addr, uint32_t reg_val);
uint32_t IORD_32DIRECT(uint32_t base, uint32_t reg_addr);
/*
 * This file was automatically generated by the swinfo2header utility.
 *
 * Created from SOPC Builder system 'hps' in
 * file 'hps.sopcinfo'.
 */

 /*
  * This file contains macros for module 'hps' and devices
  * connected to the following master:
  *   h2f_lw_axi_master
  *
  * Do not include this header file and another header file created for a
  * different module or master group at the same time.
  * Doing so may result in duplicate macro names.
  * Instead, use the system header file which has macros with unique names.
  */

  /*
   * Macros for device 'axi_bridge', class 'altera_axi_bridge'
   * The macros are prefixed with 'AXI_BRIDGE_'.
   * The prefix is the slave descriptor.
   */
#define AXI_BRIDGE_COMPONENT_TYPE altera_axi_bridge
#define AXI_BRIDGE_COMPONENT_NAME axi_bridge
#define AXI_BRIDGE_BASE 0x0
#define AXI_BRIDGE_SPAN 65536
#define AXI_BRIDGE_END 0xffff

   /*
	* Macros for device 'sys_gpio_in', class 'altera_avalon_pio'
	* The macros are prefixed with 'SYS_GPIO_IN_'.
	* The prefix is the slave descriptor.
	*/
#define SYS_GPIO_IN_COMPONENT_TYPE altera_avalon_pio
#define SYS_GPIO_IN_COMPONENT_NAME sys_gpio_in
#define SYS_GPIO_IN_BASE 0x10000
#define SYS_GPIO_IN_SPAN 16
#define SYS_GPIO_IN_END 0x1000f
#define SYS_GPIO_IN_IRQ 5
#define SYS_GPIO_IN_BIT_CLEARING_EDGE_REGISTER 0
#define SYS_GPIO_IN_BIT_MODIFYING_OUTPUT_REGISTER 0
#define SYS_GPIO_IN_CAPTURE 0
#define SYS_GPIO_IN_DATA_WIDTH 32
#define SYS_GPIO_IN_DO_TEST_BENCH_WIRING 0
#define SYS_GPIO_IN_DRIVEN_SIM_VALUE 0
#define SYS_GPIO_IN_EDGE_TYPE NONE
#define SYS_GPIO_IN_FREQ 200000000
#define SYS_GPIO_IN_HAS_IN 1
#define SYS_GPIO_IN_HAS_OUT 0
#define SYS_GPIO_IN_HAS_TRI 0
#define SYS_GPIO_IN_IRQ_TYPE LEVEL
#define SYS_GPIO_IN_RESET_VALUE 0

	/*
	 * Macros for device 'sys_gpio_out', class 'altera_avalon_pio'
	 * The macros are prefixed with 'SYS_GPIO_OUT_'.
	 * The prefix is the slave descriptor.
	 */
#define SYS_GPIO_OUT_COMPONENT_TYPE altera_avalon_pio
#define SYS_GPIO_OUT_COMPONENT_NAME sys_gpio_out
#define SYS_GPIO_OUT_BASE 0x10020
#define SYS_GPIO_OUT_SPAN 16
#define SYS_GPIO_OUT_END 0x1002f
#define SYS_GPIO_OUT_BIT_CLEARING_EDGE_REGISTER 0
#define SYS_GPIO_OUT_BIT_MODIFYING_OUTPUT_REGISTER 0
#define SYS_GPIO_OUT_CAPTURE 0
#define SYS_GPIO_OUT_DATA_WIDTH 32
#define SYS_GPIO_OUT_DO_TEST_BENCH_WIRING 0
#define SYS_GPIO_OUT_DRIVEN_SIM_VALUE 0
#define SYS_GPIO_OUT_EDGE_TYPE NONE
#define SYS_GPIO_OUT_FREQ 200000000
#define SYS_GPIO_OUT_HAS_IN 0
#define SYS_GPIO_OUT_HAS_OUT 1
#define SYS_GPIO_OUT_HAS_TRI 0
#define SYS_GPIO_OUT_IRQ_TYPE NONE
#define SYS_GPIO_OUT_RESET_VALUE 0

	 /*
	  * Macros for device 'sys_spi', class 'altera_avalon_spi'
	  * The macros are prefixed with 'SYS_SPI_'.
	  * The prefix is the slave descriptor.
	  */
#define SYS_SPI_COMPONENT_TYPE altera_avalon_spi
#define SYS_SPI_COMPONENT_NAME sys_spi
#define SYS_SPI_BASE 0x10040
#define SYS_SPI_SPAN 32
#define SYS_SPI_END 0x1005f
#define SYS_SPI_IRQ 7
#define SYS_SPI_CLOCKMULT 1
#define SYS_SPI_CLOCKPHASE 0
#define SYS_SPI_CLOCKPOLARITY 0
#define SYS_SPI_CLOCKUNITS "Hz"
#define SYS_SPI_DATABITS 8
#define SYS_SPI_DATAWIDTH 16
#define SYS_SPI_DELAYMULT "1.0E-9"
#define SYS_SPI_DELAYUNITS "ns"
#define SYS_SPI_EXTRADELAY 0
#define SYS_SPI_INSERT_SYNC 0
#define SYS_SPI_ISMASTER 1
#define SYS_SPI_LSBFIRST 0
#define SYS_SPI_NUMSLAVES 8
#define SYS_SPI_PREFIX "spi_"
#define SYS_SPI_SYNC_REG_DEPTH 2
#define SYS_SPI_TARGETCLOCK 10000000
#define SYS_SPI_TARGETSSDELAY "0.0"

	  /*
	   * Macros for device 'sys_gpio_inout', class 'altera_avalon_pio'
	   * The macros are prefixed with 'SYS_GPIO_INOUT_'.
	   * The prefix is the slave descriptor.
	   */
#define SYS_GPIO_INOUT_COMPONENT_TYPE altera_avalon_pio
#define SYS_GPIO_INOUT_COMPONENT_NAME sys_gpio_inout
#define SYS_GPIO_INOUT_BASE 0x100d0
#define SYS_GPIO_INOUT_SPAN 16
#define SYS_GPIO_INOUT_END 0x100df
#define SYS_GPIO_INOUT_IRQ 6
#define SYS_GPIO_INOUT_BIT_CLEARING_EDGE_REGISTER 0
#define SYS_GPIO_INOUT_BIT_MODIFYING_OUTPUT_REGISTER 0
#define SYS_GPIO_INOUT_CAPTURE 0
#define SYS_GPIO_INOUT_DATA_WIDTH 32
#define SYS_GPIO_INOUT_DO_TEST_BENCH_WIRING 0
#define SYS_GPIO_INOUT_DRIVEN_SIM_VALUE 0
#define SYS_GPIO_INOUT_EDGE_TYPE NONE
#define SYS_GPIO_INOUT_FREQ 200000000
#define SYS_GPIO_INOUT_HAS_IN 1
#define SYS_GPIO_INOUT_HAS_OUT 1
#define SYS_GPIO_INOUT_HAS_TRI 0
#define SYS_GPIO_INOUT_IRQ_TYPE LEVEL
#define SYS_GPIO_INOUT_RESET_VALUE 0

	   /*
		* Macros for device 'ad9371_tx_jesd204_link_reconfig', class 'adi_jesd204'
		* The macros are prefixed with 'AD9371_TX_JESD204_LINK_RECONFIG_'.
		* The prefix is the slave descriptor.
		*/
#define AD9371_TX_JESD204_LINK_RECONFIG_COMPONENT_TYPE adi_jesd204
#define AD9371_TX_JESD204_LINK_RECONFIG_COMPONENT_NAME ad9371_tx_jesd204
#define AD9371_TX_JESD204_LINK_RECONFIG_BASE 0x20000
#define AD9371_TX_JESD204_LINK_RECONFIG_SPAN 16384
#define AD9371_TX_JESD204_LINK_RECONFIG_END 0x23fff

		/*
		 * Macros for device 'ad9371_tx_jesd204_link_management', class 'adi_jesd204'
		 * The macros are prefixed with 'AD9371_TX_JESD204_LINK_MANAGEMENT_'.
		 * The prefix is the slave descriptor.
		 */
#define AD9371_TX_JESD204_LINK_MANAGEMENT_COMPONENT_TYPE adi_jesd204
#define AD9371_TX_JESD204_LINK_MANAGEMENT_COMPONENT_NAME ad9371_tx_jesd204
#define AD9371_TX_JESD204_LINK_MANAGEMENT_BASE 0x24000
#define AD9371_TX_JESD204_LINK_MANAGEMENT_SPAN 4096
#define AD9371_TX_JESD204_LINK_MANAGEMENT_END 0x24fff

		 /*
		  * Macros for device 'ad9371_tx_jesd204_link_pll_reconfig', class 'adi_jesd204'
		  * The macros are prefixed with 'AD9371_TX_JESD204_LINK_PLL_RECONFIG_'.
		  * The prefix is the slave descriptor.
		  */
#define AD9371_TX_JESD204_LINK_PLL_RECONFIG_COMPONENT_TYPE adi_jesd204
#define AD9371_TX_JESD204_LINK_PLL_RECONFIG_COMPONENT_NAME ad9371_tx_jesd204
#define AD9371_TX_JESD204_LINK_PLL_RECONFIG_BASE 0x25000
#define AD9371_TX_JESD204_LINK_PLL_RECONFIG_SPAN 4096
#define AD9371_TX_JESD204_LINK_PLL_RECONFIG_END 0x25fff

		  /*
		   * Macros for device 'ad9371_tx_jesd204_lane_pll_reconfig', class 'adi_jesd204'
		   * The macros are prefixed with 'AD9371_TX_JESD204_LANE_PLL_RECONFIG_'.
		   * The prefix is the slave descriptor.
		   */
#define AD9371_TX_JESD204_LANE_PLL_RECONFIG_COMPONENT_TYPE adi_jesd204
#define AD9371_TX_JESD204_LANE_PLL_RECONFIG_COMPONENT_NAME ad9371_tx_jesd204
#define AD9371_TX_JESD204_LANE_PLL_RECONFIG_BASE 0x26000
#define AD9371_TX_JESD204_LANE_PLL_RECONFIG_SPAN 4096
#define AD9371_TX_JESD204_LANE_PLL_RECONFIG_END 0x26fff

		   /*
			* Macros for device 'avl_adxcfg_0_rcfg_s0', class 'avl_adxcfg'
			* The macros are prefixed with 'AVL_ADXCFG_0_RCFG_S0_'.
			* The prefix is the slave descriptor.
			*/
#define AVL_ADXCFG_0_RCFG_S0_COMPONENT_TYPE avl_adxcfg
#define AVL_ADXCFG_0_RCFG_S0_COMPONENT_NAME avl_adxcfg_0
#define AVL_ADXCFG_0_RCFG_S0_BASE 0x28000
#define AVL_ADXCFG_0_RCFG_S0_SPAN 4096
#define AVL_ADXCFG_0_RCFG_S0_END 0x28fff

			/*
			 * Macros for device 'avl_adxcfg_1_rcfg_s0', class 'avl_adxcfg'
			 * The macros are prefixed with 'AVL_ADXCFG_1_RCFG_S0_'.
			 * The prefix is the slave descriptor.
			 */
#define AVL_ADXCFG_1_RCFG_S0_COMPONENT_TYPE avl_adxcfg
#define AVL_ADXCFG_1_RCFG_S0_COMPONENT_NAME avl_adxcfg_1
#define AVL_ADXCFG_1_RCFG_S0_BASE 0x29000
#define AVL_ADXCFG_1_RCFG_S0_SPAN 4096
#define AVL_ADXCFG_1_RCFG_S0_END 0x29fff

			 /*
			  * Macros for device 'avl_adxcfg_2_rcfg_s0', class 'avl_adxcfg'
			  * The macros are prefixed with 'AVL_ADXCFG_2_RCFG_S0_'.
			  * The prefix is the slave descriptor.
			  */
#define AVL_ADXCFG_2_RCFG_S0_COMPONENT_TYPE avl_adxcfg
#define AVL_ADXCFG_2_RCFG_S0_COMPONENT_NAME avl_adxcfg_2
#define AVL_ADXCFG_2_RCFG_S0_BASE 0x2a000
#define AVL_ADXCFG_2_RCFG_S0_SPAN 4096
#define AVL_ADXCFG_2_RCFG_S0_END 0x2afff

			  /*
			   * Macros for device 'avl_adxcfg_3_rcfg_s0', class 'avl_adxcfg'
			   * The macros are prefixed with 'AVL_ADXCFG_3_RCFG_S0_'.
			   * The prefix is the slave descriptor.
			   */
#define AVL_ADXCFG_3_RCFG_S0_COMPONENT_TYPE avl_adxcfg
#define AVL_ADXCFG_3_RCFG_S0_COMPONENT_NAME avl_adxcfg_3
#define AVL_ADXCFG_3_RCFG_S0_BASE 0x2b000
#define AVL_ADXCFG_3_RCFG_S0_SPAN 4096
#define AVL_ADXCFG_3_RCFG_S0_END 0x2bfff

			   /*
				* Macros for device 'ad9371_rx_jesd204_link_reconfig', class 'adi_jesd204'
				* The macros are prefixed with 'AD9371_RX_JESD204_LINK_RECONFIG_'.
				* The prefix is the slave descriptor.
				*/
#define AD9371_RX_JESD204_LINK_RECONFIG_COMPONENT_TYPE adi_jesd204
#define AD9371_RX_JESD204_LINK_RECONFIG_COMPONENT_NAME ad9371_rx_jesd204
#define AD9371_RX_JESD204_LINK_RECONFIG_BASE 0x30000
#define AD9371_RX_JESD204_LINK_RECONFIG_SPAN 16384
#define AD9371_RX_JESD204_LINK_RECONFIG_END 0x33fff

				/*
				 * Macros for device 'ad9371_rx_jesd204_link_management', class 'adi_jesd204'
				 * The macros are prefixed with 'AD9371_RX_JESD204_LINK_MANAGEMENT_'.
				 * The prefix is the slave descriptor.
				 */
#define AD9371_RX_JESD204_LINK_MANAGEMENT_COMPONENT_TYPE adi_jesd204
#define AD9371_RX_JESD204_LINK_MANAGEMENT_COMPONENT_NAME ad9371_rx_jesd204
#define AD9371_RX_JESD204_LINK_MANAGEMENT_BASE 0x34000
#define AD9371_RX_JESD204_LINK_MANAGEMENT_SPAN 4096
#define AD9371_RX_JESD204_LINK_MANAGEMENT_END 0x34fff

				 /*
				  * Macros for device 'ad9371_rx_jesd204_link_pll_reconfig', class 'adi_jesd204'
				  * The macros are prefixed with 'AD9371_RX_JESD204_LINK_PLL_RECONFIG_'.
				  * The prefix is the slave descriptor.
				  */
#define AD9371_RX_JESD204_LINK_PLL_RECONFIG_COMPONENT_TYPE adi_jesd204
#define AD9371_RX_JESD204_LINK_PLL_RECONFIG_COMPONENT_NAME ad9371_rx_jesd204
#define AD9371_RX_JESD204_LINK_PLL_RECONFIG_BASE 0x35000
#define AD9371_RX_JESD204_LINK_PLL_RECONFIG_SPAN 4096
#define AD9371_RX_JESD204_LINK_PLL_RECONFIG_END 0x35fff

				  /*
				   * Macros for device 'avl_adxcfg_0_rcfg_s1', class 'avl_adxcfg'
				   * The macros are prefixed with 'AVL_ADXCFG_0_RCFG_S1_'.
				   * The prefix is the slave descriptor.
				   */
#define AVL_ADXCFG_0_RCFG_S1_COMPONENT_TYPE avl_adxcfg
#define AVL_ADXCFG_0_RCFG_S1_COMPONENT_NAME avl_adxcfg_0
#define AVL_ADXCFG_0_RCFG_S1_BASE 0x38000
#define AVL_ADXCFG_0_RCFG_S1_SPAN 4096
#define AVL_ADXCFG_0_RCFG_S1_END 0x38fff

				   /*
					* Macros for device 'avl_adxcfg_1_rcfg_s1', class 'avl_adxcfg'
					* The macros are prefixed with 'AVL_ADXCFG_1_RCFG_S1_'.
					* The prefix is the slave descriptor.
					*/
#define AVL_ADXCFG_1_RCFG_S1_COMPONENT_TYPE avl_adxcfg
#define AVL_ADXCFG_1_RCFG_S1_COMPONENT_NAME avl_adxcfg_1
#define AVL_ADXCFG_1_RCFG_S1_BASE 0x39000
#define AVL_ADXCFG_1_RCFG_S1_SPAN 4096
#define AVL_ADXCFG_1_RCFG_S1_END 0x39fff

					/*
					 * Macros for device 'ad9371_rx_os_jesd204_link_reconfig', class 'adi_jesd204'
					 * The macros are prefixed with 'AD9371_RX_OS_JESD204_LINK_RECONFIG_'.
					 * The prefix is the slave descriptor.
					 */
#define AD9371_RX_OS_JESD204_LINK_RECONFIG_COMPONENT_TYPE adi_jesd204
#define AD9371_RX_OS_JESD204_LINK_RECONFIG_COMPONENT_NAME ad9371_rx_os_jesd204
#define AD9371_RX_OS_JESD204_LINK_RECONFIG_BASE 0x40000
#define AD9371_RX_OS_JESD204_LINK_RECONFIG_SPAN 16384
#define AD9371_RX_OS_JESD204_LINK_RECONFIG_END 0x43fff

					 /*
					  * Macros for device 'ad9371_rx_os_jesd204_link_management', class 'adi_jesd204'
					  * The macros are prefixed with 'AD9371_RX_OS_JESD204_LINK_MANAGEMENT_'.
					  * The prefix is the slave descriptor.
					  */
#define AD9371_RX_OS_JESD204_LINK_MANAGEMENT_COMPONENT_TYPE adi_jesd204
#define AD9371_RX_OS_JESD204_LINK_MANAGEMENT_COMPONENT_NAME ad9371_rx_os_jesd204
#define AD9371_RX_OS_JESD204_LINK_MANAGEMENT_BASE 0x44000
#define AD9371_RX_OS_JESD204_LINK_MANAGEMENT_SPAN 4096
#define AD9371_RX_OS_JESD204_LINK_MANAGEMENT_END 0x44fff

					  /*
					   * Macros for device 'ad9371_rx_os_jesd204_link_pll_reconfig', class 'adi_jesd204'
					   * The macros are prefixed with 'AD9371_RX_OS_JESD204_LINK_PLL_RECONFIG_'.
					   * The prefix is the slave descriptor.
					   */
#define AD9371_RX_OS_JESD204_LINK_PLL_RECONFIG_COMPONENT_TYPE adi_jesd204
#define AD9371_RX_OS_JESD204_LINK_PLL_RECONFIG_COMPONENT_NAME ad9371_rx_os_jesd204
#define AD9371_RX_OS_JESD204_LINK_PLL_RECONFIG_BASE 0x45000
#define AD9371_RX_OS_JESD204_LINK_PLL_RECONFIG_SPAN 4096
#define AD9371_RX_OS_JESD204_LINK_PLL_RECONFIG_END 0x45fff

					   /*
						* Macros for device 'avl_adxcfg_2_rcfg_s1', class 'avl_adxcfg'
						* The macros are prefixed with 'AVL_ADXCFG_2_RCFG_S1_'.
						* The prefix is the slave descriptor.
						*/
#define AVL_ADXCFG_2_RCFG_S1_COMPONENT_TYPE avl_adxcfg
#define AVL_ADXCFG_2_RCFG_S1_COMPONENT_NAME avl_adxcfg_2
#define AVL_ADXCFG_2_RCFG_S1_BASE 0x48000
#define AVL_ADXCFG_2_RCFG_S1_SPAN 4096
#define AVL_ADXCFG_2_RCFG_S1_END 0x48fff

						/*
						 * Macros for device 'avl_adxcfg_3_rcfg_s1', class 'avl_adxcfg'
						 * The macros are prefixed with 'AVL_ADXCFG_3_RCFG_S1_'.
						 * The prefix is the slave descriptor.
						 */
#define AVL_ADXCFG_3_RCFG_S1_COMPONENT_TYPE avl_adxcfg
#define AVL_ADXCFG_3_RCFG_S1_COMPONENT_NAME avl_adxcfg_3
#define AVL_ADXCFG_3_RCFG_S1_BASE 0x49000
#define AVL_ADXCFG_3_RCFG_S1_SPAN 4096
#define AVL_ADXCFG_3_RCFG_S1_END 0x49fff

						 /*
						  * Macros for device 'avl_ad9371_gpio', class 'altera_avalon_pio'
						  * The macros are prefixed with 'AVL_AD9371_GPIO_'.
						  * The prefix is the slave descriptor.
						  */
#define AVL_AD9371_GPIO_COMPONENT_TYPE altera_avalon_pio
#define AVL_AD9371_GPIO_COMPONENT_NAME avl_ad9371_gpio
#define AVL_AD9371_GPIO_BASE 0x60000
#define AVL_AD9371_GPIO_SPAN 16
#define AVL_AD9371_GPIO_END 0x6000f
#define AVL_AD9371_GPIO_IRQ 14
#define AVL_AD9371_GPIO_BIT_CLEARING_EDGE_REGISTER 0
#define AVL_AD9371_GPIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define AVL_AD9371_GPIO_CAPTURE 0
#define AVL_AD9371_GPIO_DATA_WIDTH 19
#define AVL_AD9371_GPIO_DO_TEST_BENCH_WIRING 0
#define AVL_AD9371_GPIO_DRIVEN_SIM_VALUE 0
#define AVL_AD9371_GPIO_EDGE_TYPE NONE
#define AVL_AD9371_GPIO_FREQ 200000000
#define AVL_AD9371_GPIO_HAS_IN 0
#define AVL_AD9371_GPIO_HAS_OUT 0
#define AVL_AD9371_GPIO_HAS_TRI 1
#define AVL_AD9371_GPIO_IRQ_TYPE LEVEL
#define AVL_AD9371_GPIO_RESET_VALUE 0


#endif /* _ALTERA_HPS_H_ */
